{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/map/map.component.ts","./src/app/components/map/map.component.html","./src/app/services/ip-geo-api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/ip-geo-info/ip-geo-info.component.html","./src/app/components/ip-geo-info/ip-geo-info.component.ts","./src/app/app.module.ts","./src/app/pipes/gmt-to-utc.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { formatNumber } from '@angular/common';\nimport { Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges } from '@angular/core';\nimport { latLng, MapOptions, tileLayer, Map, icon, marker, MarkerOptions, Icon } from 'leaflet';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit, OnChanges {\n\n  @Input()\n  public coords: { lat: number, lon: number } | undefined = { lat: 0, lon: 0 };\n\n  private readonly DEFAULT_ZOOM: number = 12;\n  map!: Map;\n  mapOptions!: MapOptions;\n  positionMarkerLayer: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.initializeMapOptions();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const change: SimpleChange = changes['coords'];\n    if (!change.isFirstChange()) {\n      this.updateLocationMarker(this.DEFAULT_ZOOM);\n    }\n  }\n\n  private initializeMapOptions(): void {\n    this.mapOptions = {\n      zoomControl: false,\n      zoom: this.DEFAULT_ZOOM,\n      layers: [\n        tileLayer(\n          'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n          {\n            maxZoom: 18,\n            attribution: 'Â© OpenStreetMap'\n          })\n      ],\n    };\n  }\n  public initializeMap(map: Map): void {\n    this.map = map;\n    this.updateLocationMarker();\n  }\n\n  private updateLocationMarker(zoom?: number): void {\n    this.clearMarkerLayer();\n    const coordinates = latLng([\n      this.coords ? this.coords.lat : 0,\n      this.coords ? this.coords.lon : 0\n    ]);\n    const options: MarkerOptions = this.getDefaultMarkerOptions();\n    this.positionMarkerLayer = marker(coordinates, options).addTo(this.map);\n    const zoomValue: number = zoom ? zoom : this.map.getZoom();\n    this.map.setView(coordinates, zoomValue);\n  }\n  private clearMarkerLayer(): void {\n    if (this.map.hasLayer(this.positionMarkerLayer)) {\n      this.map.removeLayer(this.positionMarkerLayer);\n    }\n  }\n  private getDefaultMarkerOptions(): MarkerOptions {\n    const options: MarkerOptions = {\n      icon: this.getDefaultMarkerIcon(),\n      title: `Latitude: ${formatNumber(this.coords ? this.coords.lat : 0, 'en-US', '1.1-7')}\\nLongitude: ${formatNumber(this.coords ? this.coords.lon : 0, 'en-US', '1.1-7')}`,\n      riseOnHover: true\n    };\n    return options;\n  }\n  private getDefaultMarkerIcon(): Icon {\n    return icon({\n      iconSize: [55, 55],\n      iconAnchor: [55, 55],\n      iconUrl: 'assets/images/icon-location.svg'\n    });\n  }\n}\n","<div class=\"map-container\">\n  <div id=\"map\" leaflet (leafletMapReady)=\"initializeMap($event)\" [leafletOptions]=\"mapOptions\"></div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport IpGeolocation from '../models/ip-geolocation';\n\n@Injectable()\nexport class IpGeoApiService {\n\n  baseUrl: string = 'http://ip-api.com/json';\n\n  /**\n   * numeric value (to save bandwidth)\n   * that represent (fields=status,message,region,city,zip,lat,lon,offset,isp,query)\n   * see https://ip-api.com/docs/api:json\n   */\n  fields: number | string = 33612532;\n\n  constructor(private http: HttpClient) { }\n\n  public getClientIpGeolocationInfo(): Observable<IpGeolocation> {\n    return this.http.get<IpGeolocation>(`${this.baseUrl}/?fields=${this.fields}`).pipe(\n      map((data: any) => {\n        return this.mapApiResponseToIpGeolocation(data);\n      })\n    );\n  }\n\n  public getIpGeolocationInfo(ip: string): Observable<IpGeolocation> {\n    return this.http.get<IpGeolocation>(`${this.baseUrl}/${ip}?fields=${this.fields}`).pipe(\n      map((data: any) => {\n        return this.mapApiResponseToIpGeolocation(data);\n      })\n    );\n  }\n\n  private mapApiResponseToIpGeolocation(data: any): IpGeolocation {\n    return {\n      ip: data.query,\n      status: data.status,\n      errorMessage: data.message,\n      location: `${data.city}, ${data.region} ${data.zip}`,\n      timezone: data.offset,\n      isp: data.isp,\n      coord: {\n        lat: data.lat,\n        lon: data.lon\n      }\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport IpGeolocation from './models/ip-geolocation';\nimport { IpGeoApiService } from './services/ip-geo-api.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  public ipGeoInfo$: Observable<IpGeolocation> = new Observable();\n\n  public ipForm!: FormGroup;\n\n  /**\n   * validate IPv4 AND IPv6\n   */\n  private ipValidator: RegExp = /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\n\n  constructor(\n    private ipGeoApiService: IpGeoApiService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.ipForm = this.fb.group({\n      ip: ['', [Validators.pattern(this.ipValidator)]]\n    });\n\n    this.ipGeoInfo$ = this.ipGeoApiService.getClientIpGeolocationInfo();\n  }\n\n  public getIpGeolocationInfo(): void {\n    if (!this.ipForm.valid) {\n      alert(`${this.ipForm.value.ip} is not a valid IP address.`);\n      return;\n    }\n\n    const { ip }: { ip: string } = this.ipForm.value;\n    this.ipGeoInfo$ = this.ipGeoApiService.getIpGeolocationInfo(ip);\n  }\n}\n","<main>\n  <header>\n    <h1>IP Address Tracker</h1>\n\n    <form [formGroup]=\"ipForm\" (ngSubmit)=\"getIpGeolocationInfo()\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for any IP address or domain\"\n          formControlName=\"ip\"\n        />\n        <button type=\"submit\">\n          <img src=\"../assets/images/icon-arrow.svg\" alt=\"icon-arrow-right\" />\n        </button>\n      </div>\n    </form>\n\n    <div class=\"ip-geolocation-info\">\n      <app-ip-geo-info [ipGeoInfo]=\"ipGeoInfo$ | async\"></app-ip-geo-info>\n    </div>\n  </header>\n\n  <div class=\"map-wrapper\">\n    <app-map [coords]=\"(ipGeoInfo$ | async)?.coord\"></app-map>\n  </div>\n</main>\n","<div class=\"wrapper\">\n  <ul>\n    <li>\n      <h4>IP Address</h4>\n      <p>{{ ipGeoInfo?.ip }}</p>\n    </li>\n    <li>\n      <h4>Location</h4>\n      <p *ngIf=\"ipGeoInfo?.status === 'success'\">\n        {{ ipGeoInfo?.location }}\n      </p>\n    </li>\n    <li>\n      <h4>Timezone</h4>\n      <p>{{ ipGeoInfo?.timezone | date: \"zzzz\" | gmtToUtc }}</p>\n    </li>\n    <li>\n      <h4>ISP</h4>\n      <p>{{ ipGeoInfo?.isp }}</p>\n    </li>\n  </ul>\n\n  <div *ngIf=\"ipGeoInfo?.status === 'fail'\">\n    <p class=\"errorMessage\">{{ ipGeoInfo?.errorMessage }}</p>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport IpGeolocation from 'src/app/models/ip-geolocation';\n\n@Component({\n  selector: 'app-ip-geo-info',\n  templateUrl: './ip-geo-info.component.html',\n  styleUrls: ['./ip-geo-info.component.scss']\n})\nexport class IpGeoInfoComponent implements OnInit {\n\n  @Input()\n  public ipGeoInfo: IpGeolocation | null = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './components/map/map.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GmtToUtcPipe } from './pipes/gmt-to-utc.pipe';\nimport { IpGeoApiService } from './services/ip-geo-api.service';\nimport { IpGeoInfoComponent } from './components/ip-geo-info/ip-geo-info.component';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    GmtToUtcPipe,\n    IpGeoInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    LeafletModule\n  ],\n  providers: [IpGeoApiService, GmtToUtcPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'gmtToUtc'\n})\nexport class GmtToUtcPipe implements PipeTransform {\n\n  transform(value: string | null): string | undefined {\n    if (!value) return;\n\n    return value.replace('GMT', 'UTC ');\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}